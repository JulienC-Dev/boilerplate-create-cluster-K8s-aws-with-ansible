- name: Install Prometheus, Grafana, and Node Exporter on Kubernetes
  hosts: k8s_masters
  user: ubuntu
  become: yes
  vars:
    ansible_python_interpreter: /home/ubuntu/k8s_venv/bin/python
    kubeconfig_path: /home/ubuntu/.kube/config
  tasks:
    - name: Ensure Helm is installed
      shell: |
        if ! command -v helm &> /dev/null; then
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        fi
      args:
        executable: /bin/bash

    - name: Add Prometheus Helm repository
      shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      args:
        executable: /bin/bash

    - name: Add Grafana Helm repository
      shell: helm repo add grafana https://grafana.github.io/helm-charts
      args:
        executable: /bin/bash

    - name: Update Helm repositories
      shell: helm repo update
      args:
        executable: /bin/bash

    - name: Create monitoring namespace
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring
      become: yes

    - name: Add Prometheus Helm repository
      shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      args:
        executable: /bin/bash
        
    - name: Install Prometheus using Helm
      shell: helm install prometheus prometheus-community/prometheus --namespace monitoring
      args:
        executable: /bin/bash

    - name: Wait for Prometheus pods to be ready
      k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Pod
        namespace: monitoring
        label_selectors:
          - "app=prometheus"
      register: prometheus_pods
      until: prometheus_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == prometheus_pods.resources | length
      retries: 10
      delay: 30

    - name: Install Grafana using Helm
      shell: helm install grafana grafana/grafana --namespace monitoring
      args:
        executable: /bin/bash

    - name: Wait for Grafana pods to be ready
      k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Pod
        namespace: monitoring
        label_selectors:
          - "app.kubernetes.io/name=grafana"
      register: grafana_pods
      until: grafana_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == grafana_pods.resources | length
      retries: 10
      delay: 30

    - name: Install Node Exporter using Helm
      shell: helm install node-exporter prometheus-community/prometheus-node-exporter --namespace monitoring
      args:
        executable: /bin/bash

    - name: Wait for Node Exporter pods to be ready
      k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Pod
        namespace: monitoring
        label_selectors:
          - "app.kubernetes.io/name=prometheus-node-exporter"
      register: node_exporter_pods
      until: node_exporter_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == node_exporter_pods.resources | length
      retries: 10
      delay: 30

    - name: Display Grafana admin password
      shell: kubectl get secret --namespace monitoring grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
      args:
        executable: /bin/bash

    - name: Display Grafana access URL
      shell: echo "Access Grafana at http://$(kubectl get svc --namespace monitoring grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
      args:
        executable: /bin/bash
