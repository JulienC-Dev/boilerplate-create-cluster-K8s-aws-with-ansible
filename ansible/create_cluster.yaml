- name: Install Docker and Kubernetes on a master node
  hosts: k8s_masters
  become: yes
  user: ubuntu
  vars:
    ansible_python_interpreter: auto
    kubeconfig_path: /home/ubuntu/.kube/config
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
      become: yes

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - curl
      become: yes

    - name: Create directory for keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
      become: yes

    - name: Download Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository to sources.list.d
      shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache
      apt:
        update_cache: yes
      become: yes

    - name: Install containerd.io package
      apt:
        name: containerd.io
        state: present
        update_cache: yes
      become: yes

    - name: Afficher le statut de containerd
      shell: systemctl status containerd
      register: resultat

    - name: Afficher le résultat
      debug:
        msg: "{{ resultat.stdout_lines }}"

    - name: Create directory ContainerD
      file:
        path: /etc/containerd
        state: directory
      become: yes

    - name: Configure containerd
      shell: sudo containerd config default | sudo tee /etc/containerd/config.toml

    - name: Edit containerd configuration file
      lineinfile:
        insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
        line: "          SystemdCgroup = true"
        state: present
        path: /etc/containerd/config.toml
      changed_when: false

    - name: Make sure  SystemdCgroup = false is not set in a config.toml
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        state: absent
        line: "            SystemdCgroup = false"

    - name: Redémarrer containerd pour appliquer les modifications
      ansible.builtin.systemd:
        name: containerd
        state: restarted

    - name: Afficher le statut de containerd
      shell: systemctl status containerd
      register: resultat

    - name: Afficher le résultat
      debug:
        msg: "{{ resultat.stdout_lines }}"

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Download Docker GPG key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      become: true

    - name: Add Docker repository to sources.list.d
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
      become: true

    - name: Update package cache
      apt:
        update_cache: yes
      become: yes

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: Redémarrer containerd pour appliquer les modifications
      ansible.builtin.systemd:
        name: kubelet
        state: restarted

    - name: Load br_netfilter module
      ansible.builtin.command: modprobe br_netfilter

    - name: Enable IP forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present

    - name: Initialize Kubernetes cluster
      ansible.builtin.command: kubeadm init --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory if it doesn't exist
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Copy Kubernetes admin.conf to user's .kube directory
      command: cp -i /etc/kubernetes/admin.conf {{ kubeconfig_path }}
      become: yes

    - name: Change ownership of .kube/config
      file:
        path: "{{ kubeconfig_path }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Ensure Python3 is installed
      apt:
        name: python3
        state: present

    - name: Ensure pip3 and virtualenv are installed
      apt:
        name: 
          - python3-pip
          - python3-venv
        state: present

    - name: Create a Python virtual environment
      command: python3 -m venv /home/ubuntu/k8s_venv
      args:
        creates: /home/ubuntu/k8s_venv

    - name: Install Kubernetes Python module in the virtual environment
      command: /home/ubuntu/k8s_venv/bin/pip install kubernetes

    - name: Wait for Kubernetes API server to be ready
      wait_for:
        port: 6443
        host: 127.0.0.1
        delay: 10
        timeout: 300
      become: yes
      
    - name: Deploy Calico Tigera Operator # FIXME: this need to wait for k8s to be ready before running- need to wait like 3 mins
      ansible.builtin.command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/tigera-operator.yaml --validate=false
      become: yes
      retries: 5
      delay: 60

    - name: Deploy Calico custom ressource
      ansible.builtin.command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/custom-resources.yaml --validate=false
      become: yes
      retries: 5
      delay: 60
      register: calico_custom_resource
      until: calico_custom_resource.rc == 0

    - name: Untaint nodes
      ansible.builtin.command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      become: yes
      retries: 5
      delay: 60
      register: untaint_nodes
      until: untaint_nodes.rc == 0

    - name: Update package cache
      apt:
        update_cache: yes
      become: yes
